name: Update .bak File on Translation PR Rejection

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'
    paths:
      - 'src/main/resources/messages_*.properties'
      - 'src/main/resources/glossaries/glossaries_*.csv'

jobs:
  update-bak-file:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.labels.contains('automated-translation') && github.event.pull_request.merged == false }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Find Original PR
        run: |
          # Extract the original PR number from the translation PR's body
          ORIGINAL_PR_NUMBER=$(gh pr view ${{ github.event.pull_request.number }} --json body | jq -r '.body' | grep 'Original PR' | grep -o '#[0-9]*' | tr -d '#')
          echo "original_pr_number=$ORIGINAL_PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Get Original PR Head SHA
        if: ${{ steps.find_original_pr.outputs.original_pr_number != '' }}
        run: |
          # Get the head SHA of the original PR
          ORIGINAL_PR_SHA=$(gh pr view ${{ steps.find_original_pr.outputs.original_pr_number }} --json head | jq -r '.head.sha')
          echo "original_pr_sha=$ORIGINAL_PR_SHA" >> $GITHUB_OUTPUT

      - name: Update .bak File
        if: ${{ steps.find_original_pr.outputs.original_pr_number != '' }}
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          # Fetch the original PR's branch
          git fetch origin ${{ steps.find_original_pr.outputs.original_pr_sha }}
          git checkout ${{ steps.find_original_pr.outputs.original_pr_sha }}
          # Update the .bak file with the current messages_en.properties
          cp src/main/resources/messages_en.properties src/main/resources/messages_en.properties.bak
          git add src/main/resources/messages_en.properties.bak
          git commit -m "Update messages_en.properties.bak after rejected translation PR #${{ github.event.pull_request.number }}"
          git push origin ${{ steps.find_original_pr.outputs.original_pr_sha }}