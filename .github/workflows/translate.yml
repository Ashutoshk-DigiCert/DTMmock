name: Translation Workflow

on:
  pull_request:
    branches:
      - epic-feature
    paths:
      - 'src/main/resources/messages_en.properties'
      - 'src/main/resources/glossaries/**'

jobs:
  check_for_translation_changes:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Check for changes
        id: check_changes
        run: |
          BASE_SHA=$(git rev-parse origin/main)
          HEAD_SHA=$(git rev-parse HEAD)
          MESSAGES_CHANGED=$(git diff --name-only $BASE_SHA $HEAD_SHA | grep -c "src/main/resources/messages_en.properties" || true)
          GLOSSARY_CHANGED=$(git diff --name-only $BASE_SHA $HEAD_SHA | grep -c "src/main/resources/glossaries/" || true)
          echo "::set-output name=messages_changed::$MESSAGES_CHANGED"
          echo "::set-output name=glossary_changed::$GLOSSARY_CHANGED"

      - name: Exit if no changes detected
        if: ${{ steps.check_changes.outputs.messages_changed == '0' && steps.check_changes.outputs.glossary_changed == '0' }}
        run: |
          echo "No changes detected in translation files. Exiting workflow."
          exit 0

      - name: Create label if it doesn't exist
        run: |
          gh label create automated-translation --color "0366d6" --description "PRs created by translation workflow" --force || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if translation PR exists
        id: check_pr
        run: |
          PR_COUNT=$(gh pr list --base "epic-feature" --head "translations/epic-feature-*" --state open --json number --jq length)
          echo "::set-output name=pr_exists::$PR_COUNT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Process translation and glossaries
        if: ${{ steps.check_changes.outputs.messages_changed != '0' || steps.check_changes.outputs.glossary_changed != '0' }}
        run: |
          # Your translation processing commands go here, for example:
          ./gradlew translatePropertiesDelta -PtargetLanguages=hi -PpreviousFile=src/main/resources/messages_en.properties.bak

      - name: Commit and push changes
        if: ${{ steps.check_changes.outputs.messages_changed != '0' || steps.check_changes.outputs.glossary_changed != '0' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "üåê Automated translations for epic-feature (#${{ github.run_number }})"
          git push origin HEAD:translations/epic-feature-${{ github.run_id }} || true

      - name: Create translation PR
        if: ${{ steps.check_pr.outputs.pr_exists == '0' && (steps.check_changes.outputs.messages_changed != '0' || steps.check_changes.outputs.glossary_changed != '0') }}
        run: |
          gh pr create --base "epic-feature" --head "translations/epic-feature-${{ github.run_id }}" \
            --title "üåê Automated translations for epic-feature" \
            --body "This PR contains automated translations based on recent changes."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
