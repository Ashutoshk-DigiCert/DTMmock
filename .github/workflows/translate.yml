name: Translation Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
    paths:
      - 'src/main/resources/messages_en.properties'
      - 'src/main/resources/glossaries/**'

jobs:
  process-translations:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Event Information
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "PR title: ${{ github.event.pull_request.title }}"
          echo "PR head ref: ${{ github.head_ref }}"
          echo "PR labels: ${{ toJSON(github.event.pull_request.labels) }}"
          echo "PR author: ${{ github.event.pull_request.user.login }}"
          echo "PR body excerpt: ${GITHUB_EVENT_PATH}"
          cat ${GITHUB_EVENT_PATH}

      - name: Check Skip Conditions
        id: skip_check
        run: |
          SHOULD_SKIP="false"
          
          if [[ "${{ github.head_ref }}" == translations/* ]]; then
            echo "Skipping: Branch starts with translations/"
            SHOULD_SKIP="true"
          fi
          
          if [[ "${{ github.event.pull_request.title }}" == *"üåê"* ]]; then
            echo "Skipping: PR title contains üåê"
            SHOULD_SKIP="true"
          fi
          
          if [[ "${{ github.event.pull_request.user.login }}" == "github-actions[bot]" ]]; then
            echo "Skipping: PR author is github-actions[bot]"
            SHOULD_SKIP="true"
          fi
          
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'automated-translation') }}" == "true" ]]; then
            echo "Skipping: PR has automated-translation label"
            SHOULD_SKIP="true"
          fi
          
          echo "should_skip=${SHOULD_SKIP}" >> $GITHUB_OUTPUT

      - name: Exit if should skip
        if: steps.skip_check.outputs.should_skip == 'true'
        run: |
          echo "Skipping workflow execution based on conditions"
          exit 0

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Google Cloud credentials
        run: |
          echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' > google-credentials.json

      - name: Generate timestamp
        id: timestamp
        run: |
          echo "timestamp=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

      - name: Check for changes in messages_en.properties
        id: check_changes
        run: |
          echo "Checking for messages_en.properties changes..."
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          CHANGED=$(echo "$CHANGED_FILES" | grep -c "src/main/resources/messages_en.properties" || true)
          echo "messages_en.properties changed: $CHANGED"
          echo "changed=$CHANGED" >> $GITHUB_OUTPUT

      - name: Check for changes in glossaries
        id: check_glossaries
        run: |
          echo "Checking for glossary changes..."
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          GLOSSARY_CHANGED=$(echo "$CHANGED_FILES" | grep -c "src/main/resources/glossaries/" || true)
          echo "Number of glossary files changed: $GLOSSARY_CHANGED"
          echo "changed=$GLOSSARY_CHANGED" >> $GITHUB_OUTPUT

      - name: Set up Gradle
        run: |
          chmod +x gradlew

      - name: Update glossaries if changed
        if: steps.check_glossaries.outputs.changed != '0'
        run: |
          echo "Updating glossaries because ${{ steps.check_glossaries.outputs.changed }} files changed"
          ./gradlew uploadGlossaryFile -PtargetLanguages=hi,fr,ru --info --stacktrace
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-credentials.json
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

      - name: Create label if it doesn't exist
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        run: |
          gh label create automated-translation \
            --color "0366d6" \
            --description "PRs created by translation workflow" \
            --force

      - name: Check if translation PR exists
        id: check_pr
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
          EPIC_BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          echo "Checking for existing translation PR..."
          PR_COUNT=$(gh pr list --base "$EPIC_BRANCH" --head "translations/$EPIC_BRANCH" --state open --json number --jq length)
          echo "Number of existing translation PRs: $PR_COUNT"
          echo "pr_exists=$PR_COUNT" >> $GITHUB_OUTPUT

      - name: Run translations if messages_en.properties changed
        if: steps.check_changes.outputs.changed != '0' && steps.check_pr.outputs.pr_exists == '0'
        env:
          EPIC_BRANCH: ${{ github.event.pull_request.head.ref }}
          PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
          GOOGLE_APPLICATION_CREDENTIALS: google-credentials.json
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          echo "Starting translation process..."
          BRANCH_NAME="translations/${EPIC_BRANCH}/${{ steps.timestamp.outputs.timestamp }}"
          echo "Creating branch: $BRANCH_NAME"
          git checkout -b "$BRANCH_NAME"

          echo "Running translation task..."
          ./gradlew translatePropertiesDelta -PtargetLanguages=hi,fr,ru -PpreviousFile=src/main/resources/messages_en.properties.bak --info --stacktrace

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          cp src/main/resources/messages_en.properties src/main/resources/messages_en.properties.bak

          echo "Checking for changes to commit..."
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "Changes detected, proceeding with commit and PR creation"
            git add src/main/resources/messages_*.properties
            git add src/main/resources/messages_en.properties.bak

            rm -f google-credentials.json

            git commit -m "üåê Automated translations for $EPIC_BRANCH

            - Source PR: #$PULL_REQUEST_NUMBER
            - Languages: hi, fr, ru
            - Timestamp: ${{ steps.timestamp.outputs.timestamp }}"

            echo "Pushing changes..."
            git push origin $BRANCH_NAME

            echo "Creating PR..."
            gh pr create \
              --base "$EPIC_BRANCH" \
              --head "$BRANCH_NAME" \
              --title "üåê Translations for $EPIC_BRANCH (#$PULL_REQUEST_NUMBER)" \
              --label "automated-translation" \
              --body "## Automated Translation PR

            üîÑ Generated from: #$PULL_REQUEST_NUMBER
            üìÖ Timestamp: ${{ steps.timestamp.outputs.timestamp }}
            üåç Target Languages: hi, fr, ru

            ### Changes Include:
            - Updated translations for modified English strings
            - Generated from latest changes in \`messages_en.properties\`

            ### Review Instructions:
            1. Check generated translations for context accuracy
            2. Verify no missing translations
            3. Confirm formatting consistency

            ---

            *This PR was automatically generated by the Translation Workflow*"
          else
            echo "No translation changes to commit"
          fi
